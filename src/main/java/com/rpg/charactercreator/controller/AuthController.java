package com.rpg.charactercreator.controller;

// 游닍 Importerar klasser som beh칬vs f칬r login och registrering
import com.rpg.charactercreator.dto.LoginRequest;
import com.rpg.charactercreator.dto.RegisterRequest;
import com.rpg.charactercreator.dto.UserDTO;
import com.rpg.charactercreator.model.User;
import com.rpg.charactercreator.service.UserService;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

/**
 * 游녻 AuthController
 * Ansvarar f칬r att hantera registrering och inloggning.
 * Bas-URL: /auth
 */
@RestController
@RequestMapping("/auth")
public class AuthController {

    private final UserService userService;

    // 游댢 Konstruktor-injektion av v친r UserService
    public AuthController(UserService userService) {
        this.userService = userService;
    }

    /**
     * 游닌 POST /auth/register
     * Skapar ett nytt anv칛ndarkonto.
     *
     * @param request Inneh친ller e-post och l칬senord fr친n frontend
     * @return UserDTO utan l칬senord
     */
    @PostMapping("/register")
    public ResponseEntity<UserDTO> register(@RequestBody RegisterRequest request) {
        User user = userService.register(request);
        return ResponseEntity.status(201).body(userService.toDTO(user));
    }

    /**
     * 游댐 POST /auth/login
     * Loggar in anv칛ndare med e-post och l칬senord.
     *
     * @param request Inloggningsinfo
     * @return UserDTO utan l칬senord
     */
    @PostMapping("/login")
    public ResponseEntity<UserDTO> login(@RequestBody LoginRequest request) {
        User user = userService.authenticate(request);
        return ResponseEntity.ok(userService.toDTO(user));
    }
}